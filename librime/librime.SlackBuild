#!/bin/sh

# Copyright 2012  Aten Zhang, SYSU, China
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# Slackware SlackBuild script 
# ===========================
# By:          Aten Zhang <atenzd@gmail.com>
# For:         librime
# Descr:       library of Rime Input Method engine
# URL:         https://code.google.com/p/rimeime/
# Needs:       boost >= 1.46.1, yaml-cpp, kyotocabinet, opencc, glog 
# Changelog:   
# 0.9.2-1:     17/Aug/2012 by Aten Zhang <atenzd@gmail.com>
#              * Initial build.
# 
# 0.9.4-1:     7/Oct/2012 by Aten Zhang <atenzd@gmail.com>
#              * Upgrade.
#
# Run 'sh librime.SlackBuild' to build a Slackware package.
# The package (.tgz) and .txt file as well as build logs are created in /tmp .
# Install it using 'installpkg'. 
#
# -----------------------------------------------------------------------------

# Set initial variables:

PKGNAM=librime
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}
NUMJOBS=${NUMJOBS:" -j4 "}
TAG=${TAG:-_aten}
CWD=$(pwd)

# Where do we look for sources?
SRCDIR=${SRCDIR:-$(cd $(dirname $0); pwd)}

# Place to build (TMP) package (PKG) and output (OUTPUT) the program:
TMP=${TMP:-/tmp/build}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

# Input URL: https://rimeime.googlecode.com/files/librime-0.9.2.tar.gz
SOURCE="$SRCDIR/${PKGNAM}-${VERSION}.tar.?z*"
SRCURL="https://rimeime.googlecode.com/files/${PKGNAM}-${VERSION}.tar.gz"

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

case "$ARCH" in
  i486)      SLKCFLAGS="-O2 -march=i486 -mtune=i686"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
  x86_64)    SLKCFLAGS="-O2 -fPIC"
             SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
             ;;
  *)         SLKCFLAGS="-O2"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
esac

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line ${LINENO}" | tee $OUTPUT/error-${PKGNAM}.log' ERR
# Catch unitialized variables:
set -u
P1=${1:-1}

# Create working directories:
mkdir -p $OUTPUT          # place for the package to be saved
mkdir -p $TMP/tmp-$PKGNAM # location to build the source
mkdir -p $PKG             # place for the package to be built
rm -rf $PKG/*             # always erase old package's contents
rm -rf $TMP/tmp-$PKGNAM/* # remove the remnants of previous build
rm -rf $OUTPUT/{configure,make,install,error,makepkg}-$PKGNAM.log
                          # remove old log files
                                                                                                                                                                                      
# Source file availability:
if ! [ -f ${SOURCE} ]; then
  echo "Source '$(basename ${SOURCE})' not available yet..."
  # Check if the $SRCDIR is writable at all - if not, download to $OUTPUT
  [ -w "$SRCDIR" ] || SOURCE="$OUTPUT/$(basename $SOURCE)"
  if [ -f ${SOURCE} ]; then echo "Ah, found it!"; continue; fi
  if ! [ "x${SRCURL}" == "x" ]; then
    echo "Will download file to $(dirname $SOURCE)"
    wget -nv -T 20 -O "${SOURCE}" "${SRCURL}" || true
    if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
      echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
      mv -f "${SOURCE}" "${SOURCE}".FAIL
      exit 1
    fi
  else
    echo "File '$(basename ${SOURCE})' not available... aborting the build."
    exit 1
  fi
fi

if [ "$P1" == "--download" ]; then
  echo "Download complete."
  exit 0
fi

# --- PACKAGE BUILDING ---

echo "++"
echo "|| $PKGNAM-$VERSION"
echo "++"

cd $TMP/tmp-$PKGNAM
echo "Extracting the source archive(s) for $PKGNAM..."
tar -xvf ${SOURCE}
cd ${PKGNAM}
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

mkdir build
cd build
  cmake -DCMAKE_C_FLAGS:STRING=${SLKCFLAGS} \
        -DCMAKE_CXX_FLAGS:STRING=${SLKCFLAGS} \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLIB_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX} \
        ..
  make
  make install DESTDIR=$PKG
cd ..

# Only need by version 0.9.2
#mv $CWD/brise $PKG/usr/share/ 

# Add documentation:
mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a LICENSE README \
  $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $SRCDIR/$(basename $0) > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PKGNAM-$VERSION
find $PKG/usr/doc -type f -exec chmod 644 {} \;

# Strip binaries (if any):
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Add a package description:
declare -i length=$(echo $PKGNAM | wc -m)-1
blank=' '
for num in $(seq 2 $length)
do
  blank=${blank}' '
done

mkdir -p $PKG/install
cat > $PKG/install/slack-desc <<EOF
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|' on
# the right side marks the last column you can put a character in.  You must make
# exactly 11 lines for the formatting to be correct.  It's also customary to
# leave one space after the ':'.

$blank|-----handy-ruler-----------------------------------------------------|
$PKGNAM: $PKGNAM (library for Rime Input Method Engine)
$PKGNAM:
$PKGNAM: Rime is a lightweight, customizable and extensible framework 
$PKGNAM: supporting various input schemata including glyph-based input
$PKGNAM: methods, romanization-based input methods as well as those for
$PKGNAM: Chinese dialects.
$PKGNAM: Its syllabification algorithm is adaptive to any scripting system.
$PKGNAM: And it has intelligent composition of phrases and sentences.
$PKGNAM: 
$PKGNAM: HomePage:https://code.google.com/p/rimeime/
$PKGNAM:
EOF

cd $PKG
makepkg --linkadd y --chown n $OUTPUT/${PKGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-tgz} 2>&1 | tee $OUTPUT/makepkg-${PKGNAM}.log
